.TH kunquat\-player\-interface 3 "2010\-01\-19" "" "Kunquat"

.SH NAME
Kunquat player API

.SH SYNOPSIS
.B #include <kunquat/Player.h>

.BI "long kqt_Handle_mix(kqt_Handle* " handle ", long " nframes );

.BI "float* kqt_Handle_get_buffer(kqt_Handle* " handle ", int " index );

.BI "int kqt_Handle_set_mixing_rate(kqt_handle* " handle ", long " rate );
.br
.BI "long kqt_Handle_get_mixing_rate(kqt_Handle* " handle );

.BI "int kqt_Handle_set_buffer_size(kqt_Handle* " handle ", long " size );
.br
.BI "long kqt_Handle_get_buffer_size(kqt_Handle* " handle );

.BI "long long kqt_Handle_get_duration(kqt_Handle* " handle ", int " subsong );

.BI "int kqt_Handle_set_position(kqt_Handle* " handle ", int " subsong ", long long " nanoseconds );
.br
.BI "long long kqt_Handle_get_position(kqt_Handle* " handle );

.SH "PLAYING AUDIO"

The Kunquat library does not support any sound devices or libraries directly.
However, it can mix PCM audio that can be sent to a suitable sound library for
playback.

.IP "\fBlong kqt_Handle_mix(kqt_Handle*\fR \fIhandle\fR\fB, long\fR \fInframes\fR\fB);\fR"
Mixes music associated with \fIhandle\fR, starting from the current position.
It will mix at most \fInframes\fR frames, but it will mix less if the mixing
buffer size is less than \fInframes\fR or the end of the composition is
reached. By default, the function mixes the audio 48000 frames per second.
This can be adjusted with the function \fBkqt_Handle_set_mixing_rate\fR.

The function will return the number of frames actually mixed. The return value
is 0 if the end of the composition/subsong is reached or an error occurred --
the caller needs to check \fBkqt_Handle_get_error(\fR\fIhandle\fR\fB)\fR to
determine whether an error occurred or not.

.IP "\fBfloat* kqt_Handle_get_buffer(kqt_Handle*\fR \fIhandle\fR\fB, int\fR \fIindex\fR\fB);\fR"
Retrieves audio data mixed by the most recent call of
\fBkqt_Handle_mix\fR. The returned data contains the mixing buffer contents of
either the left or the right output channel if \fIindex\fR is, respectively, 0
or 1. The returned buffer contains sample values normalised to the range
[-1.0, 1.0]. However, values beyond this range are possible and they indicate
clipping. The data in the returned buffers becomes invalid when
\fBkqt_Handle_mix\fR is called again. The function returns NULL if called with
invalid arguments.

.PP
Many audio interfaces expect to receive the sound data in interleaved form
where both output channels are stored in a single output buffer in the order
[left1, right1, left2, right2, ..., left\fIn\fR, right\fIn\fR]. Also, some
audio interfaces do not support 32-bit floating point format. The Kunquat
library does not support interleaving or converting the audio data, but these
functions are usually easy to implement.

.SH "MIXING RATE"

.IP "\fBint kqt_Handle_set_mixing_rate(kqt_Handle*\fR \fIhandle\fR\fB, long\fR \fIrate\fR\fB);\fR"
Sets the mixing rate of \fIhandle\fR to \fIrate\fR frames per second.
\fIrate\fR should be positive. Typical values for \fIrate\fR include 44100
("CD quality") and 48000 (the default). Note that this function may fail due
to a memory error if the composition uses features that allocate buffers based
on the mixing rate.

.IP "\fBlong kqt_Handle_get_mixing_rate(kqt_Handle*\fR \fIhandle\fR\fB);\fR"
Returns the mixing rate used by \fIhandle\fR, or 0 if \fIhandle\fR is invalid.

.SH "BUFFER SETTINGS"

.IP "\fBint kqt_Handle_set_buffer_size(kqt_Handle*\fR \fIhandle\fR\fB, long\fR \fIsize\fR\fB);\fR"
Sets the mixing buffer size of \fIhandle\fR to \fIsize\fR frames. \fIsize\fR
should be positive and not more than 1048576. The upper limit is a safety
measure -- typically, implementations use a buffer size of no more than a
couple of thousand frames.

.IP "\fBlong kqt_Handle_get_buffer_size(kqt_Handle*\fR \fIhandle\fR\fB);\fR"
Returns the buffer size of \fIhandle\fR, or 0 if \fIhandle\fR is invalid.

.SH "DURATION AND SEEKING"

.IP "\fBlong long kqt_Handle_get_duration(kqt_Handle*\fR \fIhandle\fR\fB, int\fR \fIsubsong\fR\fB);\fR"
Calculates the duration of \fIsubsong\fR of \fIhandle\fR in nanoseconds. If
\fIsubsong\fR is -1, the function will calculate the total length of all
subsongs. The return value is the length in nanoseconds, or -1 in case of an
error.

.IP "\fBint kqt_Handle_set_position(kqt_Handle*\fR \fIhandle\fR\fB, int\fR \fIsubsong\fR\fB, long long\fR \fInanoseconds\fR\fB);\fR"
Seeks to a position inside \fIsubsong\fR in \fIhandle\fR. \fInanoseconds\fR
indicates the offset from the beginning of the subsong. Note that this
function skips all non-global events before the position \fInanoseconds\fR
and therefore mixing may produce somewhat unexpected results. The function
returns 1 on success, 0 on failure.

.IP "\fBlong long kqt_Handle_get_position(kqt_Handle*\fR \fIhandle\fR\fB);\fR"
Returns the current offset of \fIsubsong\fR in nanoseconds. The function
returns 0 if \fIhandle\fR is invalid.

.SH ERRORS

If any of the functions fail, an error description can be retrieved with
\fBkqt_Handle_get_error(\fR\fIhandle\fR\fB)\fR. See
.BR kunquat-handle (3)
for more details.

.SH "SEE ALSO"

.BR kqt_Handle_get_error (3)


